import {configureStore} from '@reduxjs/toolkit';
import {apiSlice} from './apiSlice';

export const store = configureStore({    
    reducer:{
        /**Combining the reducer generated by apiSlice into the store's root reducer. 
         * The apiSlice.reducerPath provides a dynamic way to reference this reducer 
         * within the store. */
        [apiSlice.reducerPath]:apiSlice.reducer,
    },
    middleware:(getDefaultMiddleware) => getDefaultMiddleware().concat(apiSlice.middleware)
})


/**Key vs. Value

1.)reducerPath as Key: 
      The reducer object in configureStore expects properties 
      whose names define the locations within your Redux state tree.  
  
       apiSlice.reducerPath is a string (e.g., "api") that serves as that key.

2.)reducer as Value:
      The  apiSlice.reducer itself  is the function responsible 
      for managing a specific portion of your state. 
      
      It needs to be associated with the correct key (reducerPath) so that  Redux knows where to place this reducer's logic.

 * 
 * 
 */